@using UpSchool.Wasm.Common.Utilities
<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card mt-3">
            <div class="card-header text-center">
                <div class="card-title">
                    <h3 class="text-primary">Saved Passwords</h3>
                </div>
            </div>
            <div class="card-body">
                @if (savedPasswords.Any())
                {
                    <ul class="list-group text-center">
                        @foreach (var savedPassword in savedPasswords)
                        {
                            <li class="@($"list-group-item text-white {CssUtilities.GetCssColourClassForPasswords(savedPassword.Length)}")">
                                
                                <span class="clickable me-3" @onclick="@(CopyToClipboardAsync)">@savedPassword</span>

                                <span @onclick="@(() => DeletePasswordAsyncCallBack.InvokeAsync(savedPassword))" class="oi oi-trash clickable" aria-hidden="true"></span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="text-center">
                        <h5>There isn't any passwords.</h5>
                    </div>
                }
            </div>
            <div class="card-footer d-flex justify-content-between">
                <button class="btn btn-outline-info" @onclick="@(() => FetchPasswordsAsyncCallBack.InvokeAsync())">Refresh</button>
                <button class="btn btn-outline-danger" @onclick=@ClearSavedPasswords>Clear</button>
            </div>
        </div>
    </div>

</div>

@code {
    [Parameter]
    public List<string> savedPasswords { get; set; }

    [Parameter]
    public EventCallback OnCopyToClipboardAsync { get; set; }

    [Parameter]
    public EventCallback OnClearSavedPasswords { get; set; }

    [Parameter]
    public EventCallback FetchPasswordsAsyncCallBack { get; set; }

    [Parameter]
    public EventCallback<string> DeletePasswordAsyncCallBack { get; set; }

    private Task CopyToClipboardAsync()
    {
        return OnCopyToClipboardAsync.InvokeAsync();
    }

    private Task ClearSavedPasswords()
    {
        return OnClearSavedPasswords.InvokeAsync();
    }
}
